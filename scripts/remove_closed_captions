#!/usr/bin/env bash

# This script removes the following symbols from Japanese .srt files:
#	♪ ♬			(BGM)
#	☎ 			(phone ringing)
#	≪ ≫			(coming from off screen)
#	(( )) 《 》 ⦅ ⦆		(flashback)
#	＜ ＞			(narration)
#	→ ➡			(sentence continues on next subtitle line)
# It then removes any lines that only contain a tilde that might have been left behind if they were combined with the previous symbols (separate checks for wave dash (U+301C) and fullwidth tilde (U+FF5E) as both are in common use. Usually look identical depending on font)
# It then removes anything enclosed in （） () []

# WARNING: this script overwrites the original files, so you must create backups manually beforehand

# WARNING: do not use more than once on the same files, or necessary blank lines will be removed

# NOTE: files in CRLF format cause issues so conversion is done at the start of the script using s/\r$//

# NOTE: if you simply use (.*) to remove the contents of parentheses (same for [.*]), it does a "greedy" match
# a greedy match will spill over to later ) in the same line, removing characters that are not enclosed in the initial ()
# to prevent this, [^)]* is used instead of .* which means any character that is not ), so it will stop when the first ) is encountered

# NOTE: some subtitle lines in srt files have closed captions followed by a newline with dialogue after
# after caption removal, there would be a blank line followed by dialogue. This will cause the subtitle line to be ignored by some video players
# to fix this, any blank line following an SRT timestamp line is removed
# this must also be on its own sed call for some reason or it breaks the entire thing

if [[ $# -eq 0 ]]; then
	echo "$(basename $0): .srt file(s) required"
	exit 1
fi

for file in "$@"; do
	if [[ "$file" != *.srt ]]; then
		echo "$(basename $0): $file is not a .srt file."
		echo "$(basename $0): No files have been edited."
		exit 1
	fi
done

filecounter=0

for file in "$@"; do
	sed -i 's/\r$//; s/((//g; s/))//g; s/[♪♬☎≪≫＜＞〈〉《》⦅⦆→➡]//g; s/^[〜～]$//g; s/([^)]*)//g; s/\[[^]]*\]//g; s/（[^）]*）//g' "$file"
	sed -i '/^[0-9][0-9]:[0-9][0-9]:[0-9][0-9],[0-9][0-9][0-9] --> [0-9][0-9]:[0-9][0-9]:[0-9][0-9],[0-9][0-9][0-9][[:space:]]*$/{n;/^[[:space:]]*$/d}' "$file"
	((filecounter++))
done

if [ "$filecounter" -eq 1 ]; then
	echo "$(basename $0): $filecounter file edited."
fi
if [ "$filecounter" -gt 1 ]; then
	echo "$(basename $0): $filecounter files edited."
fi
